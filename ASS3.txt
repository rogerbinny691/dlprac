import numpy as np
import keras
import random
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Dense, MaxPooling2D, Flatten,Conv2D

x_train = np.loadtxt("C:/Users/mohit/Downloads/input.csv",delimiter=",")
y_train = np.loadtxt('C:/Users/mohit/Downloads/labels.csv', delimiter =',')
x_test = np.loadtxt('C:/Users/mohit/Downloads/input_test.csv', delimiter =',')
y_test = np.loadtxt('C:/Users/mohit/Downloads/labels_test.csv', delimiter =',')


print("Shape of x_train : ",x_train.shape)
print("Shape of y_train : ",y_train.shape)
print("Shape of x_test : ",x_test.shape)
print("Shape of y_test : ",y_test.shape)

x_train = x_train.reshape(len(x_train),100,100,3)
y_train = y_train.reshape(len(y_train),1)

x_test = x_test.reshape(len(x_test),100,100,3)
y_test = y_test.reshape(len(y_test),1)

print("Shape of x_train : ",x_train.shape)
print("Shape of y_train : ",y_train.shape)
print("Shape of x_test : ",x_test.shape)
print("Shape of y_test : ",y_test.shape)

x_train = x_train/255
x_test = x_test/255
x_train[2,:]

ranimg=random.randint(0,len(x_train))
plt.imshow(x_train[ranimg,:])
plt.show()

model = Sequential([
    Conv2D(32,(3,3), activation = 'relu', input_shape=(100,100,3)),
    MaxPooling2D((2,2)),
    Conv2D(32,(3,3), activation = 'relu'),
    MaxPooling2D((2,2)),
    Flatten(),
    Dense(64, activation = 'relu'),
    Dense(1, activation = 'sigmoid')
])

model.compile(loss = 'binary_crossentropy' , optimizer = 'adam', metrics = ['accuracy'])
H=model.fit(x_train, y_train, epochs = 10, batch_size = 64)

model.evaluate(x_test,y_test)

img = random.randint(0, len(y_test))
plt.imshow(x_test[img, :])
plt.show()
y_pred = model.predict(x_test[img,:].reshape(1,100,100,3))
y_pred = y_pred > 0.5
if(y_pred == 0):
    pred = 'dog'
else:
    pred = 'cat'
print("It is a",pred)

import pandas as pd
pd.DataFrame(H.history).plot(figsize=(9,5))
plt.show()

















